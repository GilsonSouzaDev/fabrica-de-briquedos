@use 'variables' as *;
@use 'sass:math';

// Função para converter px para rem.
@function rem($pixels, $context: 16) {
  @return math.div($pixels, $context) * 1rem;
}

// CORREÇÃO: Fazendo o próprio componente (app-fbc-card) ser um item flexível.
// Isso garante que ele se estique para preencher a altura que o container pai (ex: .home__card) determinar.
:host {
  display: flex;
}

.card {
  display: flex;
  flex-direction: column;
  text-align: center;
  background-color: $bg-card;
  width: rem(180);
  border-radius: rem(10);
  border: solid 1px $border-card-color;
  margin: 4px;
  box-shadow: 0px rem(4) rem(6) rem(-2) rgba(0, 0, 0, 0.4);
  cursor: pointer;
  transition: all 0.3s ease-in-out;

img {
    width: 100%;
    height: rem(140); // altura do container
    object-fit: contain; // garante que a imagem inteira apareça
    object-position: center; // centraliza a imagem
    border-radius: rem(10) rem(10) 0 0;
    transition: transform 0.3s ease-in-out;
  }

  p {
    padding: rem(8) rem(12) 0;
    font-weight: 600;
  }

  .preco {
    color: $second-color;
    font-weight: 500;
    font-size: 1.1rem;
    padding: rem(8) rem(12) rem(12);
    margin-top: auto; // Mantém o preço alinhado na parte inferior.
  }

  &:hover {
    transform: translateY(rem(-5)) scale(1.03);
    box-shadow: 0px rem(8) rem(15) rem(-2) rgba(0, 0, 0, 0.5);

    img {
      transform: scale(1.05);
    }
  }

  &:active {
    transform: scale(0.98);
  }
}

@media (max-width: 750px) {
  .card {
    width: rem(150);

    img {
      height: rem(120);
    }
  }
}
