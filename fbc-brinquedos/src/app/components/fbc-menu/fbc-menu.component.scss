@use "sass:math";
@use "variables" as *;

@function rem($pixels) {
  @return math.div($pixels, 16) * 1rem;
}

:host {
  --menu-background-color: #{$nav-menu-color};
  --menu-font-size: #{rem(20)};
  --menu-item-padding: #{rem(12)};
  --menu-item-min-height: #{rem(48)};
  --menu-border-width: #{rem(2)};
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

:host {
  box-sizing: border-box;
}

.menu {
  display: flex;
  justify-content: center;
  max-width: 100%;
  min-height: rem(30);
  max-height: rem(50);
  background-color: var(--menu-background-color);
  box-shadow: 0 rem(4) rem(6) rem(-2) rgba(0, 0, 0, 0.4);
  box-sizing: border-box;
  overflow: hidden;

  &__lista {
    display: flex;
    justify-content: space-around;
    margin: auto;
    width: 60%;
    list-style: none;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    height: 100%;

    &:hover {
      cursor: pointer;
    }

    &-item {
      font-size: clamp(#{rem(18)}, 0.5vw + #{rem(16)}, var(--menu-font-size));
      text-align: center;
      flex: 1;
      box-sizing: border-box;
      height: 100%;

      a {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        min-height: var(--menu-item-min-height);
        padding: var(--menu-item-padding);
        text-decoration: none;
        color: inherit;
        box-sizing: border-box;
        border: var(--menu-border-width) solid transparent;
        transition: background-color 0.1s ease, transform 0.1s ease, border-color 0.1s ease;

        &:hover {
          background-color: rgba(255, 255, 255, 0.1);
          transform: translateY(-1px);
          border-color: rgba(255, 255, 255, 0.3);
        }

        &:active {
          transform: translateY(0);
          background-color: rgba(255, 255, 255, 0.2);
          border-color: rgba(255, 255, 255, 0.5);
        }

        &:focus {
          outline: 2px solid rgba(255, 255, 255, 0.8);
          outline-offset: -2px;
          background-color: rgba(255, 255, 255, 0.15);
          border-color: rgba(255, 255, 255, 0.6);
        }

        &.active {
          background-color: rgba(255, 255, 255, 0.2);
          font-weight: 600;
          border: var(--menu-border-width) solid rgba(255, 255, 255, 0.8);
        }
      }
    }
  }
}

@media (max-width: 950px) {
  .menu__lista {
    width: 100%;
  }
}

@media (max-width: 750px) {
  :host {
    --menu-item-padding: #{rem(16)};
    --menu-item-min-height: #{rem(52)};
    --menu-border-width: #{rem(1.5)};
  }

  .menu__lista-item {
    font-size: rem(16);

    a {
      min-height: var(--menu-item-min-height);
    }
  }
}

@media (max-width: 480px) {
  :host {
    --menu-item-padding: #{rem(20)};
    --menu-item-min-height: #{rem(56)};
    --menu-border-width: #{rem(1)};
  }

  .menu__lista-item {
    font-size: rem(15);

    a {
      min-height: var(--menu-item-min-height);

      &:active {
        background-color: rgba(255, 255, 255, 0.3);
        transform: scale(0.98);
      }
    }
  }
}

@media (max-width: 400px) {
  .menu__lista-item {
    font-size: rem(13);

    a {
      padding: rem(12) rem(8);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  .menu__lista-item a {
    transition: none;
  }
}

@media (prefers-color-scheme: dark) {
  .menu__lista-item a {
    &:hover {
      background-color: rgba(255, 255, 255, 0.05);
    }

    &:active {
      background-color: rgba(255, 255, 255, 0.1);
    }

    &:focus {
      outline-color: rgba(255, 255, 255, 0.6);
    }
  }
}

.menu * {
  box-sizing: border-box;
}
